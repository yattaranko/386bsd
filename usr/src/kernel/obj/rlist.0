RLIST(9)                   Kernel Developer‚Äôs Manual                  RLIST(9)

[1mNAME[0m
       rlist ‚Äî resource list

[1mSYNOPSIS[0m
       [1m#include "rlist.h"[0m

       [4mvoid[0m
       [1mrlist_free[22m([4mstruct[24m [4mrlist[24m [4m**rlp[24m, [4munsigned[24m [4mstart[24m, [4munsigned[24m [4mend[24m);

       [4mint[0m
       [1mrlist_alloc[22m([4mstruct[24m [4mrlist[24m [4m**rlp[24m, [4munsigned[24m [4msize[24m, [4munsigned[24m [4m*loc[24m);

       [4mvoid[0m
       [1mrlist_destroy[22m([4mstruct[24m [4mrlist[24m [4m**rlp[24m);

[1mDESCRIPTION[0m
       Resource  lists are a sparse data abstraction used to record the use of
       real and abstract resources employed by the  kernel  program.  Resource
       lists  rely  on  dynamic  memory (see [4mmalloc[24m(9) ) to avoid compile‚Äêtime
       scaling of space to hold fragmentation. Since resources may need to  be
       allocated  during interrupt level, or during times when memory can‚Äôt be
       allocated (like when reclaiming memory pages), resource lists  must  be
       allocated  without blocking (however, they may block on the free of re‚Äê
       source).

       Each resource list is denoted by a head pointer, which initially points
       to a null list, and filled with resource by  "freeing"  space  into  it
       that can be allocated subsequently. If the resource list itself must be
       reclaimed, it must be destroyed by the service employing the resource.

       The  [1mrlist_alloc[22m()  function  allocates  a segment of resource of a re‚Äê
       quested size if available.  The [1mrlist_free[22m() function assigns  resource
       for  use  in the list, possibly blocking.  The [1mrlist_destroy[22m() function
       is used to reclaim the storage used in implementing the  resource  list
       itself.

[1mRETURN VALUES[0m
       The  [1mrlist_alloc[22m()  function returns a success or failure indication on
       return.

[1mSEE ALSO[0m
       [4mmalloc[24m(9)

386BSD 1                        August 29, 1994                       RLIST(9)
