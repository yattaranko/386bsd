FUNOPEN(3)                  Library Functions Manual                FUNOPEN(3)

[1mNAME[0m
       funopen, fropen, fwopen ‚Äî open a stream

[1mSYNOPSIS[0m
       [1m#include <stdio.h>[0m

       [4mFILE[24m [4m*[0m
       [1mfunopen[22m([4mvoid[24m   [4m*cookie[24m,   [4mint[24m   [4m(*readfn)(void[24m   [4m*,[24m   [4mchar[24m   [4m*,[24m   [4mint)[24m,
           [4mint[24m     [4m(writefn*)(void[24m     [4m*,[24m     [4mconst[24m     [4mchar[24m     [4m*,[24m      [4mint)[24m,
           [4mfpos_t[24m [4m(seekfn*)(void[24m [4m*,[24m [4mfpos_t,[24m [4mint)[24m, [4mint[24m [4m(closefn*)(void[24m [4m*)[24m);

       [4mFILE[24m [4m*[0m
       [1mfropen[22m([4mvoid[24m [4m*cookie[24m, [4mint[24m [4m(*readfn)(void[24m [4m*,[24m [4mchar[24m [4m*,[24m [4mint)[24m);

       [4mFILE[24m [4m*[0m
       [1mfwopen[22m([4mvoid[24m [4m*cookie[24m, [4mint[24m [4m(*writefn)(void[24m [4m*,[24m [4mchar[24m [4m*,[24m [4mint)[24m);

[1mDESCRIPTION[0m
       The  [1mfunopen[22m()  function  associates  a  stream  with  up  to four ‚ÄúI/O
       functions‚Äù.  Either [4mreadfn[24m or [4mwritefn[24m must be specified; the others can
       be given as an appropriately‚Äêtyped NULL pointer.  These  I/O  functions
       will be used to read, write, seek and close the new stream.

       In  general,  omitting a function means that any attempt to perform the
       associated operation on the resulting stream will fail.  If  the  close
       function  is omitted, closing the stream will flush any buffered output
       and then succeed.

       The calling conventions of [4mreadfn[24m, [4mwritefn[24m,  [4mseekfn[24m  and  [4mclosefn[24m  must
       match  those, respectively, of [4mread[24m(2), [4mwrite[24m(2), [4mseek[24m(2), and [4mclose[24m(2)
       with the single exception that they  are  passed  the  [4mcookie[24m  argument
       specified  to [1mfunopen[22m() in place of the traditional file descriptor ar‚Äê
       gument.

       Read and write I/O functions  are  allowed  to  change  the  underlying
       buffer   on   fully  buffered  or  line  buffered  streams  by  calling
       [4msetvbuf[24m(3).  They are also not required to completely fill or empty the
       buffer.  They are not, however, allowed  to  change  streams  from  un‚Äê
       buffered to buffered or to change the state of the line buffering flag.
       They must also be prepared to have read or write calls occur on buffers
       other than the one most recently specified.

       All  user I/O functions can report an error by returning -1.  Addition‚Äê
       ally, all of the functions should set the external variable  [4merrno[24m  ap‚Äê
       propriately if an error occurs.

       An error on [1mclosefn[22m() does not keep the stream open.

       As  a  convenience,  the  include  file  ‚ü®[4mstdio.h[24m‚ü©  defines  the macros
       [1mfropen[22m() and [1mfwopen[22m() as calls to [1mfunopen[22m() with only a read  or  write
       function specified.

[1mRETURN VALUES[0m
       Upon  successful  completion, [1mfunopen[22m() returns a FILE pointer.  Other‚Äê
       wise, NULL is returned and the global variable [4merrno[24m is set to indicate
       the error.

[1mERRORS[0m
       [EINVAL]  The [1mfunopen[22m() function was called without either  a  read  or
                 write function.  The [1mfunopen[22m() function may also fail and set
                 [4merrno[24m  for  any  of  the  errors  specified  for  the routine
                 [4mmalloc[24m(3).

[1mSEE ALSO[0m
       [4mfcntl[24m(2), [4mopen[24m(2), [4mfclose[24m(3), [4mfopen[24m(3), [4mfseek[24m(3), [4msetbuf[24m(3)

[1mHISTORY[0m
       These functions are currently under development.

[1mBUGS[0m
       The [1mfunopen[22m() function may not be portable to systems other than BSD.

FreeBSD 13.2                    April 19, 1991                      FUNOPEN(3)
