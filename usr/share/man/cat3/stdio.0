STDIO(3)                    Library Functions Manual                  STDIO(3)

[1mNAME[0m
       stdio ‚Äî standard input/output library functions

[1mSYNOPSIS[0m
       [1m#include <stdio.h>[0m
       [1mFILE *stdin;[0m
       [1mFILE *stdout;[0m
       [1mFILE *stderr;[0m

[1mDESCRIPTION[0m
       The  standard  I/O  library  provides  a  simple and efficient buffered
       stream I/O interface.  Input and ouput  is  mapped  into  logical  data
       streams  and  the physical I/O characteristics are concealed. The func‚Äê
       tions and macros are listed below; more information is  available  from
       the individual man pages.

       A  stream  is associated with an external file (which may be a physical
       device) by [4mopening[24m a file, which may involve creating a new file.  Cre‚Äê
       ating  an existing file causes its former contents to be discarded.  If
       a file can support positioning requests (such as a disk  file,  as  op‚Äê
       posed to a terminal) then a [4mfile[24m [4mposition[24m [4mindicator[24m associated with the
       stream  is  positioned at the start of the file (byte zero), unless the
       file is opened with appened mode. If append mode is used, the  position
       indicator  will  be  placed the end‚Äêof‚Äêfile.  The position indicator is
       maintained by subsequent reads, writes and  positioning  requests.  All
       input  occurs as if the characters were read by successive calls to the
       [4mfgetc[24m(3) function; all ouput takes place as if all characters were read
       by successive calls to the [4mfputc[24m(3) function.

       A file is disassociated from a  stream  by  [4mclosing[24m  the  file.   Ouput
       streams  are  flushed  (any unwritten buffer contents are transfered to
       the host environment) before the stream is disassociated from the file.
       The value of a pointer to a FILE object is indeterminate after  a  file
       is closed (garbage).

       A file may be subsequently reopened, by the same or another program ex‚Äê
       ecution,  and  its contents reclaimed or modified (if it can be reposi‚Äê
       tioned at the start).  If the main function  returns  to  its  original
       caller,  or  the  [4mexit[24m(3) function is called, all open files are closed
       (hence all output streams  are  flushed)  before  program  termination.
       Other  methods  of  program termination, such as [4mabort[24m(3) do not bother
       about closing files properly.

       At program startup, three text streams are predefined and need  not  be
       opened explicitly ‚Äî [4mstandard[24m [4minput[24m (for reading converntional input), ‚Äî
       [4mstandard[24m  [4moutput[24m  (for writing converntional input), and [4mstandard[24m [4merror[0m
       (for writing diagnostic output).  These streams are abbreviated  [4mstdin[24m,
       [4mstdout[24m and [4mstderr[24m.  When opened, the standard error stream is not fully
       buffered;  the  standard input and output streams are fully buffered if
       and only if the streams do not to refer to an interactive device.

       Output streams that refer to terminal devices are always line  buffered
       by  default;  pending  output  to such streams is written automatically
       whenever an input stream that refers to a terminal device is read.   In
       cases  where  a large amount of computation is done after printing part
       of a line on an output terminal, it is necessary to [4mfflush[24m(3) the stan‚Äê
       dard output before going off and computing so that the output will  ap‚Äê
       pear.

       The  [1mstdio [22mlibrary is a part of the library [4mlibc[24m and routines are auto‚Äê
       matically loaded as needed by  the  compilers  [4mcc[24m(1)  and  [4mpc[24m(1).   The
       SYNOPSIS  sections of the following manual pages indicate which include
       files are to be used, what the compiler declaration  for  the  function
       looks like and which external variables are of interest.

       The  following  are  defined  as macros; these names may not be re‚Äêused
       without first removing their current definitions with  #undef:  BUFSIZ,
       EOF,  FILENAME_MAX,  L_cuserid,  L_ctermid,  L_tmpnam,  NULL, SEEK_END,
       SEEK_SET, SEE_CUR, TMP_MAX, clearerr,  feof,  ferror,  fileno,  fropen,
       fwopen,  getc, getchar, putc, putchar, stderr, stdin, stdout.  Function
       versions of the macro functions [4mfeof[24m, [4mferror[24m, [4mclearerr[24m,  [4mfileno[24m,  [4mgetc[24m,
       [4mgetchar[24m, [4mputc[24m, and [4mputchar[24m exist and will be used if the macros defini‚Äê
       tions are explicitly removed.

[1mSEE ALSO[0m
       [4mopen[24m(2), [4mclose[24m(2), [4mread[24m(2), [4mwrite[24m(2)

[1mBUGS[0m
       The standard buffered functions do not interact well with certain other
       library and system functions, especially [4mvfork[24m and [4mabort[24m.

[1mSTANDARDS[0m
       The [1mstdio [22mlibrary conforms to ANSI X3.159‚Äê1989 (‚ÄúANSI C89‚Äù).

[1mLIST OF FUNCTIONS[0m
       [1mFunction       Description[0m
       clearerr       check and reset stream status
       fclose         close a stream
       fdopen         stream open functions
       feof           check and reset stream status
       ferror         check and reset stream status
       fflush         flush a stream
       fgetc          get next character or word from input stream
       fgetline       get a line from a stream
       fgetpos        reposition a stream
       fgets          get a line from a stream
       fileno         check and reset stream status
       fopen          stream open functions
       fprintf        formatted output conversion
       fpurge         flush a stream
       fputc          output a character or word to a stream
       fputs          output a line to a stream
       fread          binary stream input/output
       freopen        stream open functions
       fropen         open a stream
       fscanf         input format conversion
       fseek          reposition a stream
       fsetpos        reposition a stream
       ftell          reposition a stream
       funopen        open a stream
       fwopen         open a stream
       fwrite         binary stream input/output
       getc           get next character or word from input stream
       getchar        get next character or word from input stream
       gets           get a line from a stream
       getw           get next character or word from input stream
       mktemp         make temporary file name (unique)
       perror         system error messages
       printf         formatted output conversion
       putc           output a character or word to a stream
       putchar        output a character or word to a stream
       puts           output a line to a stream
       putw           output a character or word to a stream
       remove         remove directory entry
       rewind         reposition a stream
       scanf          input format conversion
       setbuf         stream buffering operations
       setbuffer      stream buffering operations
       setlinebuf     stream buffering operations
       setvbuf        stream buffering operations
       snprintf       formatted output conversion
       sprintf        formatted output conversion
       sscanf         input format conversion
       strerror       system error messages
       sys_errlist    system error messages
       sys_nerr       system error messages
       tempnam        temporary file routines
       tmpfile        temporary file routines
       tmpnam         temporary file routines
       ungetc         un‚Äêget character from input stream
       vfprintf       formatted output conversion
       vfscanf        input format conversion
       vprintf        formatted output conversion
       vscanf         input format conversion
       vsnprintf      formatted output conversion
       vsprintf       formatted output conversion
       vsscanf        input format conversion

4th Berkeley Distribution         May 6, 1991                         STDIO(3)
