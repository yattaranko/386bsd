POPEN(3)                    Library Functions Manual                  POPEN(3)

[1mNAME[0m
       popen, pclose ‚Äî process I/O

[1mSYNOPSIS[0m
       [1m#include <stdio.h>[0m

       [4mFILE[24m [4m*[0m
       [1mpopen[22m([4mconst[24m [4mchar[24m [4m*command[24m, [4mconst[24m [4mchar[24m [4m*type[24m);

       [4mint[0m
       [1mpclose[22m([4mFILE[24m [4m*stream[24m);

[1mDESCRIPTION[0m
       The [1mpopen[22m() function ‚Äúopens‚Äù a process by creating a pipe, forking, and
       invoking  the shell.  Since a pipe is by definition unidirectional, the
       [4mtype[24m argument may specify only reading or writing, not  both;  the  re‚Äê
       sulting stream is correspondingly read‚Äêonly or write‚Äêonly.

       The  [4mcommand[24m argument is a pointer to a null‚Äêterminated string contain‚Äê
       ing a shell command line.  This command is passed to [4m/bin/sh[24m using  the
       [1m-c  [22mflag;  interpretation, if any, is performed by the shell.  The [4mmode[0m
       argument is a pointer to a null‚Äêterminated string which must be  either
       ‚Äòr‚Äô for reading or ‚Äòw‚Äô for writing.

       The  return  value  from [1mpopen[22m() is a normal standard I/O stream in all
       respects save  that  it  must  be  closed  with  [1mpclose[22m()  rather  than
       [1mfclose[22m().  Writing to such a stream writes to the standard input of the
       command;  the  command‚Äôs  standard  output  is  the same as that of the
       process that called [1mpopen[22m(), unless this is altered by the command  it‚Äê
       self.   Conversely, reading from a ‚Äúpopened‚Äù stream reads the command‚Äôs
       standard output, and the command‚Äôs standard input is the same  as  that
       of the process that called [1mpopen[22m().

       Note that output [1mpopen[22m() streams are fully buffered by default.

       The [1mpclose[22m() function waits for the associated process to terminate and
       returns the exit status of the command as returned by [1mwait4[22m().

[1mRETURN VALUE[0m
       The [1mpopen[22m() function returns NULL if the [4mfork[24m(2) or [4mpipe[24m(2) calls fail,
       or if it cannot allocate memory.

       The  [1mpclose[22m()  function  returns  -1 if [4mstream[24m is not associated with a
       ‚Äúpopened‚Äù command, if [4mstream[24m already ‚Äúpclosed‚Äù, or if [4mwait4[24m returns  an
       error.

[1mERRORS[0m
       The [1mpopen[22m() function does not reliably set [4merrno[24m.

[1mSEE ALSO[0m
       [4mfork[24m(2),  [4msh[24m(1),  [4mpipe[24m(2),  [4mwait4[24m(2),  [4mfflush[24m(3),  [4mfclose[24m(3), [4mfopen[24m(3),
       [4mstdio[24m(3), [4msystem[24m(3)

[1mBUGS[0m
       Since the standard input of a command opened  for  reading  shares  its
       seek  offset  with  the  process  that  called [1mpopen[22m(), if the original
       process has done a buffered read, the command‚Äôs input position may  not
       be  as expected.  Similarly, the output from a command opened for writ‚Äê
       ing may become intermingled with that of  the  original  process.   The
       latter can be avoided by calling [4mfflush[24m(3) before [1mpopen[22m().

       Failure  to  execute  the  shell  is indistinguishable from the shell‚Äôs
       failure to execute command, or an immediate exit of the  command.   The
       only hint is an exit status of 127.

       The [1mpopen[22m() argument always calls [4msh[24m, never calls [4mcsh[24m.

[1mHISTORY[0m
       A [1mpopen[22m() and a [1mpclose[22m() function appeared in Version 7 AT&T UNIX.

FreeBSD 13.2                    April 30, 1991                        POPEN(3)
