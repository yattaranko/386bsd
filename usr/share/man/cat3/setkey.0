CRYPT(3)                    Library Functions Manual                  CRYPT(3)

[1mNAME[0m
       crypt, setkey, encrypt, des_setkey, des_cipher ‚Äî DES encryption

[1mSYNOPSIS[0m
       [4mchar[0m
       [1m*crypt[22m([4mconst[24m [4mchar[24m [4m*key[24m, [4mconst[24m [4mchar[24m [4m*setting[24m);

       [4mint[0m
       [1msetkey[22m([4mchar[24m [4m*key[24m);

       [4mint[0m
       [1mencrypt[22m([4mchar[24m [4m*block[24m, [4mint[24m [4mflag[24m);

       [4mint[0m
       [1mdes_setkey[22m([4mconst[24m [4mchar[24m [4m*key[24m);

       [4mint[0m
       [1mdes_cipher[22m([4mconst[24m [4mchar[24m [4m*in[24m, [4mchar[24m [4m*out[24m, [4mlong[24m [4msalt[24m, [4mint[24m [4mcount[24m);

[1mDESCRIPTION[0m
       The  [4mcrypt[24m  function  performs password encryption.  It is derived from
       the NBS Data Encryption Standard.  Additional code has  been  added  to
       deter   key  search  attempts.   The  first  argument  to  [1mcrypt  [22mis  a
       NUL‚Äêterminated string (normally a password typed by a user).  The  sec‚Äê
       ond  is  a  character array, 9 bytes in length, consisting of an under‚Äê
       score (‚Äò‚Äò_‚Äô‚Äô) followed by 4 bytes of iteration count  and  4  bytes  of
       salt.   Both  the  iteration [4mcount[24m and the [4msalt[24m are encoded with 6 bits
       per character, least significant bits first.  The values 0  to  63  are
       encoded by the characters ‚Äò‚Äò./0‚Äê9A‚ÄêZa‚Äêz‚Äô‚Äô, respectively.

       The  [4msalt[24m  is used to induce disorder in to the DES algorithm in one of
       16777216 possible ways (specifically, if bit [4mi[24m of the [4msalt[24m is set  then
       bits  [4mi[24m  and [4mi+24[24m are swapped in the DES ‚Äò‚ÄòE‚Äô‚Äô box output).  The [4mkey[24m is
       divided into groups of 8 characters  (a  short  final  group  is  null‚Äê
       padded)  and  the  low‚Äêorder 7 bits of each each character (56 bits per
       group) are used to form the DES key as follows: the first group  of  56
       bits  becomes  the initial DES key.  For each additional group, the XOR
       of the group bits and the encryption of the DES key with itself becomes
       the next DES key.  Then the final DES key is used to perform [4mcount[24m  cu‚Äê
       mulative  encryptions  of  a  64‚Äêbit constant.  The value returned is a
       NUL‚Äêterminated string, 20 bytes in length, consisting  of  the  [4msetting[0m
       followed by the encoded 64‚Äêbit encryption.

       For compatibility with historical versions of [4mcrypt[24m(3), the [4msetting[24m may
       consist  of  2 bytes of salt, encoded as above, in which case an itera‚Äê
       tion [4mcount[24m of 25 is used, fewer perturbations of DES are available,  at
       most  8  characters  of  [4mkey[24m  are  used,  and  the  returned value is a
       NUL‚Äêterminated string 13 bytes in length.

       The functions, [1mencrypt[22m(), [1msetkey[22m(), [1mdes_setkey[22m() and [1mdes_cipher[22m() allow
       limited access to the  DES  algorithm  itself.   The  [4mkey[24m  argument  to
       [1msetkey[22m()  is a 64 character array of binary values (numeric 0 or 1).  A
       56‚Äêbit key is derived from this array by dividing the array into groups
       of 8 and ignoring the last bit in each group.

       The [1mencrypt[22m() argument [4mblock[24m is also a 64  character  array  of  binary
       values.   If  the  value of [4mflag[24m is 0, the argument [4mblock[24m is encrypted,
       otherwise it is decrypted.  The encryption or decryption is returned in
       the original array [4mblock[24m after using the key specified by  [1msetkey[22m()  to
       process it.

       The  [1mdes_setkey[22m()  and  [1mdes_cipher[22m()  functions  are  faster  but  less
       portable than [1msetkey[22m() and [1mencrypt[22m().  The argument to [1mdes_setkey[22m()  is
       a character array of length 8.  The [4mleast[24m significant bit in each char‚Äê
       acter is ignored and the next 7 bits of each character are concatenated
       to yield a 56‚Äêbit key.  The function [1mdes_cipher[22m() encrypts (or decrypts
       if  [4mcount[24m is negative) the 64‚Äêbits stored in the 8 characters at [4min[24m us‚Äê
       ing [4mabs[24m(3) of [4mcount[24m iterations of DES and stores the 64‚Äêbit  result  in
       the  8  characters  at [4mout[24m.  The [4msalt[24m specifies perturbations to DES as
       described above.

       The function [1mcrypt[22m() returns a pointer to the encrypted value  on  suc‚Äê
       cess   and   NULL  on  failure.   The  functions  [1msetkey[22m(),  [1mencrypt[22m(),
       [1mdes_setkey[22m(), and [1mdes_cipher[22m() return 0 on success and  1  on  failure.
       Historically,  the  functions [1msetkey[22m() and [1mencrypt[22m() did not return any
       value.  They have been provided return values primarily to  distinguish
       implementations where hardware support is provided but not available or
       where  the  DES  encryption is not available due to the usual political
       silliness.

[1mSEE ALSO[0m
       [4mlogin[24m(1), [4mpasswd[24m(1), [4mgetpass[24m(3), [4mpasswd[24m(5)


       Wayne Patterson, [4mMathematical[24m [4mCryptology[24m [4mfor[24m  [4mComputer[24m  [4mScientists[24m  [4mand[0m
       [4mMathematicians[24m, ISBN 0‚Äê8476‚Äê7438‚ÄêX, 1987.

       R.  Morris  and  Ken  Thompson,  ‚ÄúPassword  Security:  A Case History‚Äù,
       [4mCommunications[24m [4mof[24m [4mthe[24m [4mACM[24m, vol. 22, pp. 594‚Äê597, Nov. 1979.

       M.E. Hellman, ‚ÄúDES will be Totally Insecure  within  Ten  Years‚Äù,  [4mIEEE[0m
       [4mSpectrum[24m, vol. 16, pp. 32‚Äê39, July 1979.

[1mHISTORY[0m
       A  rotor‚Äêbased  [1mcrypt[22m()  function appeared in Version 6 AT&T UNIX.  The
       current style [1mcrypt[22m() first appeared in Version 7 AT&T UNIX.

[1mBUGS[0m
       Dropping the [4mleast[24m significant bit in each character of the argument to
       [1mdes_setkey[22m() is ridiculous.

       The [1mcrypt[22m() function leaves its result in an internal static object and
       returns a pointer to that object.  Subsequent  calls  to  [1mcrypt[22m()  will
       modify the same object.

FreeBSD 13.2                     May 21, 1991                         CRYPT(3)
