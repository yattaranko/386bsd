SETBUF(3)                   Library Functions Manual                 SETBUF(3)

[1mNAME[0m
       setbuf, setbuffer, setlinebuf, setvbuf ‚Äî stream buffering operations

[1mSYNOPSIS[0m
       [1m#include <stdio.h>[0m

       [4mint[0m
       [1msetbuf[22m([4mFILE[24m [4m*stream[24m, [4mchar[24m [4m*buf[24m);

       [4mint[0m
       [1msetbuffer[22m([4mFILE[24m [4m*stream[24m, [4mchar[24m [4m*buf[24m, [4msize_t[24m [4msize[24m);

       [4mint[0m
       [1msetlinebuf[22m([4mFILE[24m [4m*stream[24m);

       [4mint[0m
       [1msetvbuf[22m([4mFILE[24m [4m*stream[24m, [4mchar[24m [4m*buf[24m, [4mint[24m [4mmode[24m, [4msize_t[24m [4msize[24m);

[1mDESCRIPTION[0m
       The  three types of buffering available are unbuffered, block buffered,
       and line buffered.  When an output stream  is  unbuffered,  information
       appears on the destination file or terminal as soon as written; when it
       is  block buffered many characters are saved up and written as a block;
       when it is line buffered characters are saved up  until  a  newline  is
       output  or  input is read from any stream attached to a terminal device
       (typically stdin).  The function [4mfflush[24m(3) may be  used  to  force  the
       block  out  early.   (See  [4mfclose[24m(3).)   Normally  all  files are block
       buffered.  When the first I/O operation occurs on a file, [4mmalloc[24m(3)  is
       called, and a buffer is obtained.  If a stream refers to a terminal (as
       [4mstdout[24m  normally  does) it is line buffered.  The standard error stream
       [4mstderr[24m is always unbuffered.

       The [1msetvbuf[22m() function may be used at any time on any  open  stream  to
       change  its  buffer.   The  [4mmode[24m parameter must be one of the following
       three macros:

             _IONBF  unbuffered

             _IOLBF  line buffered

             _IOFBF  fully buffered

       Except for unbuffered files, the [4mbuf[24m argument should point to a  buffer
       at  least [4msize[24m bytes long; this buffer will be used instead of the cur‚Äê
       rent buffer.  If the argument [4mbuf[24m is NULL, only the mode is affected; a
       new buffer will be allocated on the next read or write operation.   The
       [1msetvbuf[22m()  function  may  be  used at any time, but can only change the
       mode of a stream when it is not ‚Äò‚Äòactive‚Äô‚Äô: that is, before any I/O, or
       immediately after a call to [4mfflush[24m.

       The other three calls are, in  effect,  simply  aliases  for  calls  to
       [1msetvbuf[22m().  The [1msetbuf[22m() function is exactly equivalent to the call

             [1msetvbuf(stream, buf, buf[22m? [1m_IOFBF[22m: [1m_IONBF, BUFSIZ);[0m

       The  [1msetbuffer[22m()  function  is  the  same,  except that the size of the
       buffer is up to the caller, rather than being determined by the default
       BUFSIZ.  The [1msetlinebuf[22m() function is exactly equivalent to the call:

             [1msetvbuf(stream, (char *)NULL, _IOLBF, 0);[0m

[1mSEE ALSO[0m
       [4mfopen[24m(3), [4mfclose[24m(3), [4mfread[24m(3), [4mmalloc[24m(3), [4mputs[24m(3), [4mprintf[24m(3)

[1mSTANDARDS[0m
       The [1msetbuf[22m()  and  [1msetvbuf[22m()  functions  conform  to  ANSI  X3.159‚Äê1989
       (‚ÄúANSI C89‚Äù).

[1mBUGS[0m
       The [1msetbuffer[22m() and [1msetlinebuf[22m() functions are not portable to versions
       of  BSD  before  4.2BSD.  On 4.2BSD and 4.3BSD systems, [1msetbuf[22m() always
       uses a suboptimal buffer size and should be avoided.

4th Berkeley Distribution        June 29, 1991                       SETBUF(3)
