CTIME(3)                    Library Functions Manual                  CTIME(3)

[1mNAME[0m
       asctime,  ctime, difftime, gmtime, localtime, mktime ‚Äî transform binary
       date and time value to ASCII

[1mSYNOPSIS[0m
       [1m#include <sys/types.h>[0m

       [4mextern[24m [4mchar[24m [4m*tzname[2];[0m

       [4mchar[24m [4m*[0m
       [1mctime[22m([4mconst[24m [4mtime_t[24m [4m*clock[24m);

       [4mdouble[0m
       [1mdifftime[22m([4mtime_t[24m [4mtime1[24m, [4mtime_t[24m [4mtime0[24m);

       [1m#include <time.h>[0m

       [4mchar[24m [4m*[0m
       [1masctime[22m([4mconst[24m [4mstruct[24m [4mtm[24m [4m*tm[24m);

       [4mstruct[24m [4mtm[24m [4m*[0m
       [1mlocaltime[22m([4mconst[24m [4mtime_t[24m [4m*clock[24m);

       [4mstruct[24m [4mtm[24m [4m*[0m
       [1mgmtime[22m([4mconst[24m [4mtime_t[24m [4m*clock[24m);

       [4mtime_t[0m
       [1mmktime[22m([4mstruct[24m [4mtm[24m [4m*tm[24m);

[1mDESCRIPTION[0m
       The functions [1mctime[22m(), [1mgmtime[22m() and [1mlocaltime[22m() all take as an argument
       a time value representing the time in seconds since the Epoch (00:00:00
       UTC, January 1, 1970; see [4mtime[24m(3)).

       The function [1mlocaltime[22m() converts the time value pointed at  by  [4mclock[24m,
       and returns a pointer to a ‚Äú[4mstruct[24m [4mtm[24m‚Äù (described below) which contains
       the  broken‚Äêout  time information for the value after adjusting for the
       current time zone (and any other factors such as Daylight Saving Time).
       Time zone adjustments are performed as specified by the TZ  environmen‚Äê
       tal  variable  (see  [4mtzset[24m(3)).  The function [1mlocaltime[22m() uses [4mtzset[24m to
       initialize time conversion information if [4mtzset[24m has  not  already  been
       called by the process.

       After filling in the tm structure, [1mlocaltime[22m() sets the [4mtm_isdst[24m‚Äôth el‚Äê
       ement  of  [4mtzname[24m  to a pointer to an ASCII string that‚Äôs the time zone
       abbreviation to be used with [1mlocaltime[22m()‚Äôs return value.

       The function [1mgmtime[22m() similarly converts the time  value,  but  without
       any  time zone adjustment, and returns a pointer to a tm structure (de‚Äê
       scribed below).

       The [1mctime[22m() function adjusts the time value for the current  time  zone
       in  the same manner as [1mlocaltime[22m(), and returns a pointer to a 26‚Äêchar‚Äê
       acter string of the form:

             Thu Nov 24 18:22:48 1986\n\0

       All the fields have constant width.

       The [1masctime[22m() function converts the broken down time in  the  structure
       [4mtm[24m pointed at by [4m*tm[24m to the form shown in the example above.

       The function [1mmktime[22m() converts the broken‚Äêdown time, expressed as local
       time, in the structure pointed to by tm into a time value with the same
       encoding  as  that of the values returned by the [4mtime[24m(3) function, that
       is, seconds from the Epoch, UTC.

       The original values of the [4mtm_wday[24m and [4mtm_yday[24m components of the struc‚Äê
       ture are ignored, and the original values of the other  components  are
       not  restricted  to their normal ranges.  (A positive or zero value for
       [4mtm_isdst[24m causes [1mmktime[22m() to presume initially that summer time (for ex‚Äê
       ample, Daylight Saving Time) is or is not in effect for  the  specified
       time,  respectively.  A negative value for [4mtm_isdst[24m causes the [1mmktime[22m()
       function to attempt to divine whether summer time is in effect for  the
       specified time.)

       On  successful completion, the values of the [4mtm_wday[24m and [4mtm_yday[24m compo‚Äê
       nents of the structure are set appropriately, and the other  components
       are set to represent the specified calendar time, but with their values
       forced  to  their  normal ranges; the final value of [4mtm_mday[24m is not set
       until [4mtm_mon[24m and [4mtm_year[24m are determined.  [1mMktime[22m() returns  the  speci‚Äê
       fied  calendar time; if the calendar time cannot be represented, it re‚Äê
       turns -1;

       The [1mdifftime[22m() function returns the  difference  between  two  calendar
       times, ([4mtime1[24m ‚Äê [4mtime0[24m), expressed in seconds.

       External declarations as well as the tm structure definition are in the
       ‚ü®[4mtime.h[24m‚ü©  include file.  The tm structure includes at least the follow‚Äê
       ing fields:

             int tm_sec;     /‚àó seconds (0 ‚Äê 60) ‚àó/
             int tm_min;     /‚àó minutes (0 ‚Äê 59) ‚àó/
             int tm_hour;    /‚àó hours (0 ‚Äê 23) ‚àó/
             int tm_mday;    /‚àó day of month (1 ‚Äê 31) ‚àó/
             int tm_mon;     /‚àó month of year (0 ‚Äê 11) ‚àó/
             int tm_year;    /‚àó year - 1900 ‚àó/
             int tm_wday;    /‚àó day of week (Sunday = 0) ‚àó/
             int tm_yday;    /‚àó day of year (0 ‚Äê 365) ‚àó/
             int tm_isdst;   /‚àó is summer time in effect? ‚àó/
             char ‚àótm_zone;  /‚àó abbreviation of timezone name ‚àó/
             long tm_gmtoff; /‚àó offset from UTC in seconds ‚àó/

       The field [4mtm_isdst[24m is non‚Äêzero if summer time is in effect.

       The field [4mtm_gmtoff[24m is the offset (in seconds) of the time  represented
       from UTC, with positive values indicating east of the Prime Meridian.

[1mSEE ALSO[0m
       [4mdate[24m(1), [4mgettimeofday[24m(2), [4mgetenv[24m(3), [4mtime[24m(3), [4mtzset[24m(3), [4mtzfile[24m(5)

[1mHISTORY[0m
       This manual page is derived from the time package contributed to Berke‚Äê
       ley by Arthur Olsen and which appeared in 4.3BSD.

[1mBUGS[0m
       Except for [1mdifftime[22m() and [1mmktime[22m(), these functions leaves their result
       in  an internal static object and return a pointer to that object. Sub‚Äê
       sequent calls to these function will modify the same object.

       The [4mtm_zone[24m field of a returned tm structure points to a  static  array
       of  characters,  which will also be overwritten by any subsequent calls
       (as well as by subsequent calls to [4mtzset[24m(3) and [4mtzsetwall[24m(3)).

       Use of the external variable [4mtzname[24m is discouraged; the  [4mtm_zone[24m  entry
       in the tm structure is preferred.

       Avoid  using  out‚Äêof‚Äêrange  values  with [1mmktime[22m() when setting up lunch
       with promptness sticklers in Riyadh.

4.3 Berkeley Distribution       April 19, 1991                        CTIME(3)
