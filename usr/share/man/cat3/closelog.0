SYSLOG(3)                   Library Functions Manual                 SYSLOG(3)

[1mNAME[0m
       syslog, vsyslog, openlog, closelog, setlogmask ‚Äî control system log

[1mSYNOPSIS[0m
       [1m#include <syslog.h>[0m
       [1m#include <varargs.h>[0m

       [4mvoid[0m
       [1msyslog[22m([4mint[24m [4mpriority[24m, [4mconst[24m [4mchar[24m [4m*message[24m, [4m...[24m);

       [4mvoid[0m
       [1mvsyslog[22m([4mint[24m [4mpriority[24m, [4mconst[24m [4mchar[24m [4m*message[24m, [4mva_list[24m [4margs[24m);

       [4mvoid[0m
       [1mopenlog[22m([4mconst[24m [4mchar[24m [4m*ident[24m, [4mint[24m [4mlogopt[24m, [4mint[24m [4mfacility[24m);

       [4mvoid[0m
       [1mcloselog[22m([4mvoid[24m);

       [4mint[0m
       [1msetlogmask[22m([4mint[24m [4mmaskpri[24m);

[1mDESCRIPTION[0m
       The [1msyslog[22m() function writes [4mmessage[24m to the system message logger.  The
       message  is  then  written  to the system console, log files, logged‚Äêin
       users, or forwarded to other machines as appropriate. (See [4msyslogd[24m(8).)

       The message is identical to a [4mprintf[24m(3) format string, except that ‚Äò%m‚Äô
       is replaced by the current error message. (As  denoted  by  the  global
       variable  [4merrno[24m; see [4mstrerror[24m(3).)  A trailing newline is added if none
       is present.

       The [1mvsyslog[22m() function is an alternate form in which the arguments have
       already been captured using the variable‚Äêlength argument facilities  of
       [4mvarargs[24m(3).

       The  message  is  tagged  with  [4mpriority[24m.   Priorities are encoded as a
       [4mfacility[24m and a [4mlevel[24m.  The facility describes the part  of  the  system
       generating  the  message.   The  level  is  selected from the following
       [4mordered[24m (high to low) list:

       LOG_EMERG     A panic condition.  This is  normally  broadcast  to  all
                     users.

       LOG_ALERT     A condition that should be corrected immediately, such as
                     a corrupted system database.

       LOG_CRIT      Critical conditions, e.g., hard device errors.

       LOG_ERR       Errors.

       LOG_WARNING   Warning messages.

       LOG_NOTICE    Conditions that are not error conditions, but should pos‚Äê
                     sibly be handled specially.

       LOG_INFO      Informational messages.

       LOG_DEBUG     Messages  that  contain  information normally of use only
                     when debugging a program.

       The [1mopenlog[22m() function provides for more specialized processing of  the
       messages  sent  by  [1msyslog[22m()  and  [1mvsyslog[22m().  The parameter [4mident[24m is a
       string that will be prepended to every message.  The [4mlogopt[24m argument is
       a bit field specifying logging options, which is formed by  OR‚Äôing  one
       or more of the following values:

       LOG_CONS      If  [1msyslog[22m()  cannot  pass the message to [4msyslogd[24m it will
                     attempt   to   write   the   message   to   the   console
                     (‚Äú[4m/dev/console.[24m‚Äù)

       LOG_NDELAY    Open the connection to [4msyslogd[24m immediately.  Normally the
                     open  is delayed until the first message is logged.  Use‚Äê
                     ful for programs that need to manage the order  in  which
                     file descriptors are allocated.

       LOG_PERROR    Write the message to standard error output as well to the
                     system log.

       LOG_PID       Log  the process id with each message: useful for identi‚Äê
                     fying instantiations of daemons.

       The [4mfacility[24m parameter encodes a default facility to be assigned to all
       messages that do not have an explicit facility encoded:

       LOG_AUTH      The authorization system: [4mlogin[24m(1), [4msu[24m(1), [4mgetty[24m(8), etc.

       LOG_AUTHPRIV  The same as LOG_AUTH, but logged to a file readable  only
                     by selected individuals.

       LOG_CRON      The clock daemon.

       LOG_DAEMON    System  daemons,  such  as [4mftpd[24m(8), [4mrouted[24m(8), etc., that
                     are not provided for explicitly by other facilities.

       LOG_KERN      Messages generated by the kernel.  These cannot be gener‚Äê
                     ated by any user processes.

       LOG_LPR       The line printer spooling system: [4mlpr[24m(1), [4mlpc[24m(8), [4mlpd[24m(8),
                     etc.

       LOG_MAIL      The mail system.

       LOG_NEWS      The network news system.

       LOG_SYSLOG    Messages generated internally by [4msyslogd[24m(8).

       LOG_USER      Messages generated by random user processes.  This is the
                     default facility identifier if none is specified.

       LOG_UUCP      The uucp system.

       LOG_LOCAL0    Reserved for local use.  Similarly for LOG_LOCAL1 through
                     LOG_LOCAL7.

       The [1mcloselog[22m() function can be used to close the log file.

       The [1msetlogmask[22m() function sets the log priority mask to [4mmaskpri[24m and re‚Äê
       turns the previous mask.  Calls to [1msyslog[22m() with a priority not set  in
       [4mmaskpri[24m  are rejected.  The mask for an individual priority [4mpri[24m is cal‚Äê
       culated by the macro [1mLOG_MASK[22m([4mpri[24m); the mask for all priorities  up  to
       and  including [4mtoppri[24m is given by the macro [1mLOG_UPTO[22m([4mtoppri[24m);.  The de‚Äê
       fault allows all priorities to be logged.

[1mRETURN VALUES[0m
       The routines [1mcloselog[22m(), [1mopenlog[22m(), [1msyslog[22m() and  [1mvsyslog[22m()  return  no
       value.

       The routine [1msetlogmask[22m() always returns the previous log mask level.

[1mEXAMPLES[0m
             syslog(LOG_ALERT, "who: internal error 23");

             openlog("ftpd", LOG_PID, LOG_DAEMON);
             setlogmask(LOG_UPTO(LOG_ERR));
             syslog(LOG_INFO, "Connection from host %d", CallingHost);

             syslog(LOG_INFO|LOG_LOCAL2, "foobar error: %m");

[1mSEE ALSO[0m
       [4mlogger[24m(1), [4msyslogd[24m(8)

[1mHISTORY[0m
       These functions appeared in 4.2BSD.

4.2 Berkeley Distribution       April 19, 1991                       SYSLOG(3)
