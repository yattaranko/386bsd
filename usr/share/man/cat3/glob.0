GLOB(3)                     Library Functions Manual                   GLOB(3)

[1mNAME[0m
       glob, globfree ‚Äî generate pathnames matching a pattern

[1mSYNOPSIS[0m
       [1m#include <glob.h>[0m

       [4mint[0m
       [1mglob[22m([4mconst[24m [4mchar[24m [4m*pattern[24m, [4mint[24m [4mflags[24m, [4mconst[24m [4mint[24m [4m(*errfunc)(char[24m [4m*,[24m [4mint)[24m,
           [4mglob_t[24m [4m*pglob[24m);

       [4mvoid[0m
       [1mglobfree[22m([4mglob_t[24m [4m*pglob[24m);

[1mDESCRIPTION[0m
       The  [1mglob[22m()  function is a pathname generator that implements the rules
       for file name pattern matching used by the shell.

       The include file [4mglob.h[24m defines the structure type [4mglob_t[24m,  which  con‚Äê
       tains at least the following fields:

       typedef struct {
               int gl_pathc;           /* count of total paths so far */
               int gl_matchc;          /* count of paths matching pattern */
               int gl_offs;            /* reserved at beginning of gl_pathv */
               int gl_flags;           /* returned flags */
               char **gl_pathv;        /* list of paths matching pattern */
       } glob_t;

       The argument [4mpattern[24m is a pointer to a pathname pattern to be expanded.
       The  [1mglob[22m()  argument matches all accessible pathnames against the pat‚Äê
       tern and creates a list of the pathnames that match.  In order to  have
       access to a pathname, [1mglob[22m() requires search permission on every compo‚Äê
       nent of a path except the last and read permission on each directory of
       any  filename  component  of  [4mpattern[24m  that contains any of the special
       characters ‚Äò*‚Äô, ‚Äò‚Äô?  or [‚Äò‚Äô.

       The [1mglob[22m() argument stores the number of  matched  pathnames  into  the
       [4mgl_pathc[24m  field,  and a pointer to a list of pointers to pathnames into
       the [4mgl_pathv[24m field.  The first pointer after the last pathname is NULL.
       If the pattern does not match any pathnames,  the  returned  number  of
       matched paths is set to zero.

       It is the caller‚Äôs responsibility to create the structure pointed to by
       [4mpglob[24m.   The [1mglob[22m() function allocates other space as needed, including
       the memory pointed to by [4mgl_pathv[24m.

       The argument [4mflags[24m is used to modify the behavior of [1mglob[22m().  The value
       of [4mflags[24m is the bitwise inclusive OR of any of the following values de‚Äê
       fined in [4mglob.h[24m:

       GLOB_APPEND   Append pathnames generated to the ones  from  a  previous
                     call (or calls) to [1mglob[22m().  The value of [4mgl_pathc[24m will be
                     the  total  matches  found  by this call and the previous
                     call(s).  The pathnames are appended to, not merged  with
                     the  pathnames returned by the previous call(s).  Between
                     calls, the caller must not  change  the  setting  of  the
                     GLOB_DOOFFS  flag,  nor  change the value of [4mgl_offs[24m when
                     GLOB_DOOFFS is set, nor (obviously) call  [1mglobfree[22m()  for
                     [4mpglob[24m.

       GLOB_DOOFFS   Make  use  of  the  [4mgl_offs[24m  field.  If this flag is set,
                     [4mgl_offs[24m is used to specify  how  many  NULL  pointers  to
                     prepend to the beginning of the [4mgl_pathv[24m field.  In other
                     words, [4mgl_pathv[24m will point to [4mgl_offs[24m NULL pointers, fol‚Äê
                     lowed  by  [4mgl_pathc[24m pathname pointers, followed by a NULL
                     pointer.

       GLOB_ERR      Causes [1mglob[22m() to return when it  encounters  a  directory
                     that  it cannot open or read.  Ordinarily, [1mglob[22m() contin‚Äê
                     ues to find matches.

       GLOB_MARK     Each pathname that is a directory  that  matches  [4mpattern[0m
                     has a slash appended.

       GLOB_NOCHECK  If  [4mpattern[24m  does not match any pathname, then [1mglob[22m() re‚Äê
                     turns a list consisting of only [4mpattern[24m, with the  number
                     of total pathnames is set to 1, and the number of matched
                     pathnames  set to 0.  If GLOB_QUOTE is set, its effect is
                     present in the pattern returned.

       GLOB_NOMAGIC  Is the same as  GLOB_NOCHECK  but  it  only  appends  the
                     [4mpattern[24m if it does not contain any of the special charac‚Äê
                     ters  ‚Äò‚Äò*‚Äô‚Äô, ‚Äò‚Äò?‚Äô‚Äô or ‚Äò‚Äò[‚Äô‚Äô.  GLOB_NOMAGIC is provided to
                     simplify implementing the historic [4mcsh[24m(1) globbing behav‚Äê
                     ior and should probably not be used anywhere else.

       GLOB_NOSORT   By default, the pathnames are sorted in  ascending  ASCII
                     order;  this  flag  prevents  that  sorting  (speeding up
                     [1mglob[22m()).

       GLOB_QUOTE    Use the backslash (‚Äò\‚Äô) character for quoting: every  oc‚Äê
                     currence  of  a  backslash followed by a character in the
                     pattern is replaced by that character, avoiding any  spe‚Äê
                     cial interpretation of the character.

       GLOB_ALTDIRFUNC
                     The  following  additional  fields in the pglob structure
                     have been initialized with alternate functions  for  glob
                     to  use  to  open, read, and close directories and to get
                     stat information on names found in those directories.

                             void *(*gl_opendir)();
                             struct dirent *(*gl_readdir)();
                             void (*gl_closedir)();
                             int (*gl_lstat)();
                             int (*gl_stat)();

                     This non‚Äêstandard extension is provided to allow programs
                     such as restore  to  provide  globbing  from  directories
                     stored on tape.

       If, during the search, a directory is encountered that cannot be opened
       or  read  and [4merrfunc[24m is non‚ÄêNULL, [1mglob[22m() calls [4m(*errfunc)(path,errno)[24m.
       This may be unintuitive:  a  pattern  like  ‚Äò*/Makefile‚Äô  will  try  to
       [4mstat[24m(2) ‚Äòfoo/Makefile‚Äô even if ‚Äòfoo‚Äô is not a directory, resulting in a
       call to [4merrfunc[24m.  The error routine can suppress this action by testing
       for  ENOENT and ENOTDIR; however, the GLOB_ERR flag will still cause an
       immediate return when this happens.

       If  [4merrfunc[24m  returns  non‚Äêzero,  [1mglob[22m()  stops  the  scan  and  returns
       GLOB_ABEND after setting [4mgl_pathc[24m and [4mgl_pathv[24m to reflect any paths al‚Äê
       ready  matched.   This  also  happens  if  an  error is encountered and
       GLOB_ERR is set in [4mflags[24m, regardless of the return value of [4merrfunc[24m, if
       called.  If GLOB_ERR is not set and either [4merrfunc[24m is NULL  or  [4merrfunc[0m
       returns zero, the error is ignored.

       The  [1mglobfree[22m()  function  frees any space associated with [4mpglob[24m from a
       previous call(s) to [1mglob[22m().

[1mRETURN VALUES[0m
       On successful completion, [1mglob[22m() returns zero.  In addition the  fields
       of [4mpglob[24m contain the values described below:

       [4mgl_pathc[24m      contains  the  total  number of matched pathnames so far.
                     This includes other matches from previous invocations  of
                     [1mglob[22m() if GLOB_APPEND was specified.

       [4mgl_matchc[24m     contains  the  number of matched pathnames in the current
                     invocation of [1mglob[22m().

       [4mgl_flags[24m      contains a copy of  the  [4mflags[24m  parameter  with  the  bit
                     GLOB_MAGCHAR  set if [4mpattern[24m contained any of the special
                     characters ‚Äò‚Äò*‚Äô‚Äô, ‚Äò‚Äò?‚Äô‚Äô or ‚Äò‚Äò[‚Äô‚Äô, cleared if not.

       [4mgl_pathv[24m      contains a pointer to a NULL‚Äêterminated list  of  matched
                     pathnames.  However, if [4mgl_pathc[24m is zero, the contents of
                     [4mgl_pathv[24m are undefined.

       If  [1mglob[22m() terminates due to an error, it sets errno and returns one of
       the following non‚Äêzero constants, which are defined in the include file
       ‚ü®[4mglob.h[24m‚ü©:

       GLOB_NOSPACE  An attempt to allocate memory failed.

       GLOB_ABEND    The scan was stopped because an error was encountered and
                     either GLOB_ERR was set  or  [4m(*errfunc)()[24m  returned  non‚Äê
                     zero.

       The  arguments  [4mpglob->gl_pathc[24m  and  [4mpglob->gl_pathv[24m  are still set as
       specified above.

[1mSEE ALSO[0m
       [4msh[24m(1), [4mfnmatch[24m(3), [4mwordexp[24m(3), [4mregexp[24m(3)

[1mSTANDARDS[0m
       The [1mglob[22m() function is expected to be IEEE Std 1003.2 (‚ÄúPOSIX.2‚Äù)  com‚Äê
       patible   with   the  exception  that  the  flags  GLOB_ALTDIRFUNC  and
       GLOB_QUOTE and the fields [4mgl_matchc[24m and [4mgl_flags[24m should not be used  by
       applications striving for strict POSIX conformance.

[1mEXAMPLE[0m
       A  rough equivalent of ‚Äòls ‚Äêl *.c *.h‚Äô can be obtained with the follow‚Äê
       ing code:

             GLOB_t g;

             g.gl_offs = 2;
             glob("*.c", GLOB_DOOFFS, NULL, &g);
             glob("*.h", GLOB_DOOFFS | GLOB_APPEND, NULL, &g);
             g.gl_pathv[0] = "ls";
             g.gl_pathv[1] = "‚Äêl";
             execvp("ls", g.gl_pathv);

[1mHISTORY[0m
       The [1mglob[22m() and [1mglobfree[22m() functions are currently under development.

[1mBUGS[0m
       Patterns longer than MAXPATHLEN may cause unchecked errors.

       The [1mglob[22m() argument may fail and set errno for any of the errors speci‚Äê
       fied  for  the  library  routines  [4mstat[24m(2),  [4mclosedir[24m(3),   [4mopendir[24m(3),
       [4mreaddir[24m(3), [4mmalloc[24m(3), and [4mfree[24m(3).

FreeBSD 13.2                   December 2, 1992                        GLOB(3)
