GETDIRENTRIES(2)              System Calls Manual             GETDIRENTRIES(2)

[1mNAME[0m
       getdirentries  ‚Äî get directory entries in a filesystem independent for‚Äê
       mat

[1mSYNOPSIS[0m
       [1m#include <sys/dirent.h>[0m

       [4mint[0m
       [1mgetdirentries[22m([4mint[24m [4mfd[24m, [4mchar[24m [4m*buf[24m, [4mint[24m [4mnbytes[24m, [4mlong[24m [4m*basep[24m);

[1mDESCRIPTION[0m
       [1mGetdirentries[22m() reads directory entries from the  directory  referenced
       by  the  file  descriptor  [4mfd[24m  into  the buffer pointed to by [4mbuf[24m, in a
       filesystem independent format.  Up to [4mnbytes[24m of  data  will  be  trans‚Äê
       ferred.  [4mNbytes[24m must be greater than or equal to the block size associ‚Äê
       ated  with  the  file,  see  [4mstat[24m(2).  Some filesystems may not support
       [1mgetdirentries[22m() with buffers smaller than this size.

       The data in the buffer is a series of [4mdirent[24m structures each containing
       the following entries:

             unsigned long   d_fileno;
             unsigned short  d_reclen;
             unsigned short  d_namlen;
             char            d_name[MAXNAMELEN + 1]; /* see below */

       The [4md_fileno[24m entry is a number which is unique for each  distinct  file
       in  the  filesystem.  Files that are linked by hard links (see [4mlink[24m(2))
       have the same [4md_fileno[24m.  The [4md_reclen[24m entry is the length, in bytes, of
       the directory record.  The [4md_name[24m entry contains a null terminated file
       name.  The [4md_namlen[24m entry specifies the length of the file name exclud‚Äê
       ing the null byte.  Thus the actual size of [4md_name[24m may vary from  1  to
       MAXNAMELEN + 1.

       Entries  may  be  separated  by extra space.  The [4md_reclen[24m entry may be
       used as an offset from the start of a  [4mdirent[24m  structure  to  the  next
       structure, if any.

       The  actual number of bytes transferred is returned.  The current posi‚Äê
       tion pointer associated with [4mfd[24m is set to point to the  next  block  of
       entries.   The  pointer may not advance by the number of bytes returned
       by [1mgetdirentries[22m().  A value of zero is returned when the  end  of  the
       directory has been reached.

       [1mGetdirentries[22m() writes the position of the block read into the location
       pointed  to  by [4mbasep[24m.  Alternatively, the current position pointer may
       be set and retrieved by [4mlseek[24m(2).  The current position pointer  should
       only  be  set  to a value returned by [4mlseek[24m(2), a value returned in the
       location pointed to by [4mbasep[24m, or zero.

[1mRETURN VALUES[0m
       If successful, the number of bytes actually  transferred  is  returned.
       Otherwise, ‚Äê1 is returned and the global variable [4merrno[24m is set to indi‚Äê
       cate the error.

[1mERRORS[0m
       [1mGetdirentries[22m() will fail if:

       EBADF     [4mfd[24m is not a valid file descriptor open for reading.

       EFAULT    Either  [4mbuf[24m  or  [4mbasep[24m  point  outside  the allocated address
                 space.

       EIO       An I/O error occurred while reading from or  writing  to  the
                 file system.

[1mSEE ALSO[0m
       [4mopen[24m(2), [4mlseek[24m(2)

[1mHISTORY[0m
       The [1mgetdirentries [22mfunction call is currently under development.

FreeBSD 13.2                     July 23, 1991                GETDIRENTRIES(2)
