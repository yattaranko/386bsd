CHMOD(2)                      System Calls Manual                     CHMOD(2)

[1mNAME[0m
       chmod, fchmod ‚Äî change mode of file

[1mSYNOPSIS[0m
       [1m#include <sys/stat.h>[0m

       [4mint[0m
       [1mchmod[22m([4mconst[24m [4mchar[24m [4m*path[24m, [4mmode_t[24m [4mmode[24m);

       [4mint[0m
       [1mfchmod[22m([4mint[24m [4mfd[24m, [4mmode_t[24m [4mmode[24m);

[1mDESCRIPTION[0m
       The  function  [1mchmod[22m() sets the file permission bits of the file speci‚Äê
       fied by the pathname [4mpath[24m to [4mmode[24m.  [1mFchmod[22m() sets the  permission  bits
       of the specified file descriptor [4mfd[24m.  [1mChmod[22m() verifies that the process
       owner  (user) either owns the file specified by [4mpath[24m (or [4mfd[24m), or is the
       super‚Äêuser.  A mode is created from [4mor[24m‚Äôd permission bit  masks  defined
       in ‚ü®[4msys/stat.h[24m‚ü©:
             #define S_IRWXU 0000700    /* RWX mask for owner */
             #define S_IRUSR 0000400    /* R for owner */
             #define S_IWUSR 0000200    /* W for owner */
             #define S_IXUSR 0000100    /* X for owner */

             #define S_IRWXG 0000070    /* RWX mask for group */
             #define S_IRGRP 0000040    /* R for group */
             #define S_IWGRP 0000020    /* W for group */
             #define S_IXGRP 0000010    /* X for group */

             #define S_IRWXO 0000007    /* RWX mask for other */
             #define S_IROTH 0000004    /* R for other */
             #define S_IWOTH 0000002    /* W for other */
             #define S_IXOTH 0000001    /* X for other */

             #define S_ISUID 0004000    /* set user id on execution */
             #define S_ISGID 0002000    /* set group id on execution */
             #define S_ISVTX 0001000    /* save swapped text even after use */

       The  ISVTX  (the  [4msticky[24m  [4mbit[24m) indicates to the system which executable
       files are shareable (the default) and the system maintains the  program
       text  of  the files in the swap area. The sticky bit may only be set by
       the super user on shareable executable files.

       If mode ISVTX (the ‚Äòsticky bit‚Äô) is set on a directory, an unprivileged
       user may not delete or rename files of other users in  that  directory.
       The  sticky  bit  may  be set by any user on a directory which the user
       owns or has appropriate permissions.  For more details of  the  proper‚Äê
       ties of the sticky bit, see [4msticky[24m(8).

       Writing  or  changing the owner of a file turns off the set‚Äêuser‚Äêid and
       set‚Äêgroup‚Äêid bits unless the user is the super‚Äêuser.   This  makes  the
       system  somewhat  more  secure by protecting set‚Äêuser‚Äêid (set‚Äêgroup‚Äêid)
       files from remaining set‚Äêuser‚Äêid (set‚Äêgroup‚Äêid) if they  are  modified,
       at the expense of a degree of compatibility.

[1mRETURN VALUES[0m
       Upon  successful  completion,  a  value of 0 is returned.  Otherwise, a
       value of ‚Äê1 is returned and [4merrno[24m is set to indicate the error.

[1mERRORS[0m
       [1mChmod[22m() will fail and the file mode will be unchanged if:

       [ENOTDIR]          A component of the path prefix is not a directory.

       [EINVAL]           The pathname contains a character with the  high‚Äêor‚Äê
                          der bit set.

       [ENAMETOOLONG]     A  component  of a pathname exceeded 255 characters,
                          or an entire path name exceeded 1023 characters.

       [ENOENT]           The named file does not exist.

       [EACCES]           Search permission is denied for a component  of  the
                          path prefix.

       [ELOOP]            Too  many  symbolic links were encountered in trans‚Äê
                          lating the pathname.

       [EPERM]            The effective user ID does not match  the  owner  of
                          the file and the effective user ID is not the super‚Äê
                          user.

       [EROFS]            The named file resides on a read‚Äêonly file system.

       [EFAULT]           [4mPath[24m  points outside the process‚Äôs allocated address
                          space.

       [EIO]              An I/O error occurred while reading from or  writing
                          to the file system.

       [1mFchmod[22m() will fail if:

       [EBADF]            The descriptor is not valid.

       [EINVAL]           refers to a socket, not to a file.

       [EROFS]            The file resides on a read‚Äêonly file system.

       [EIO]              An  I/O error occurred while reading from or writing
                          to the file system.

[1mSEE ALSO[0m
       [4mchmod[24m(1), [4mopen[24m(2), [4mchown[24m(2), [4mstat[24m(2), [4msticky[24m(8)

[1mSTANDARDS[0m
       [1mChmod[22m() is expected to conform to IEEE Std 1003.1‚Äê1988 (‚ÄúPOSIX‚Äù).

[1mHISTORY[0m
       The [1mfchmod[22m() function call appeared in 4.2BSD.

4th Berkeley Distribution       March 10, 1991                        CHMOD(2)
