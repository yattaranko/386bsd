GETRUSAGE(2)                  System Calls Manual                 GETRUSAGE(2)

[1mNAME[0m
       getrusage ‚Äî get information about resource utilization

[1mSYNOPSIS[0m
       [1m#include <sys/time.h>[0m
       [1m#include <sys/resource.h>[0m
       [1m#define   RUSAGE_SELF     0[0m
       [1m#define   RUSAGE_CHILDREN     ‚Äê1[0m

       [4mint[0m
       [1mgetrusage[22m([4mint[24m [4mwho[24m, [4mstruct[24m [4mrusage[24m [4m*rusage[24m);

[1mDESCRIPTION[0m
       [1mGetrusage[22m()  returns  information  describing the resources utilized by
       the current process, or all its terminated child  processes.   The  [4mwho[0m
       parameter  is  either  RUSAGE_SELF  or  RUSAGE_CHILDREN.  The buffer to
       which [4mrusage[24m points will be filled in with the following structure:

       struct rusage {
               struct timeval ru_utime; /* user time used */
               struct timeval ru_stime; /* system time used */
               long ru_maxrss;          /* integral max resident set size */
               long ru_ixrss;           /* integral shared text memory size */
               long ru_idrss;           /* integral unshared data size */
               long ru_isrss;           /* integral unshared stack size */
               long ru_minflt;          /* page reclaims */
               long ru_majflt;          /* page faults */
               long ru_nswap;           /* swaps */
               long ru_inblock;         /* block input operations */
               long ru_oublock;         /* block output operations */
               long ru_msgsnd;          /* messages sent */
               long ru_msgrcv;          /* messages received */
               long ru_nsignals;        /* signals received */
               long ru_nvcsw;           /* voluntary context switches */
               long ru_nivcsw;          /* involuntary context switches */
       };

       The fields are interpreted as follows:

       [4mru_utime[24m     the total amount of time spent executing in user mode.

       [4mru_stime[24m     the total amount of time spent in the system executing  on
                    behalf of the process(es).

       [4mru_maxrss[24m    the maximum resident set size utilized (in kilobytes).

       [4mru_ixrss[24m     an  integral value indicating the amount of memory used by
                    the  text  segment  that  was  also  shared  among   other
                    processes.   This value is expressed in units of kilobytes
                    * ticks‚Äêof‚Äêexecution.

       [4mru_idrss[24m     an integral value of the amount of unshared memory  resid‚Äê
                    ing  in  the data segment of a process (expressed in units
                    of kilobytes * ticks‚Äêof‚Äêexecution).

       [4mru_isrss[24m     an integral value of the amount of unshared memory  resid‚Äê
                    ing  in the stack segment of a process (expressed in units
                    of kilobytes * ticks‚Äêof‚Äêexecution).

       [4mru_minflt[24m    the number of page faults serviced without any I/O  activ‚Äê
                    ity;  here  I/O  activity  is avoided by reclaiming a page
                    frame from the list of pages awaiting reallocation.

       [4mru_majflt[24m    the number of page faults serviced that required  I/O  ac‚Äê
                    tivity.

       [4mru_nswap[24m     the number of times a process was swapped out of main mem‚Äê
                    ory.

       [4mru_inblock[24m   the number of times the file system had to perform input.

       [4mru_oublock[24m   the number of times the file system had to perform output.

       [4mru_msgsnd[24m    the number of IPC messages sent.

       [4mru_msgrcv[24m    the number of IPC messages received.

       [4mru_nsignals[24m  the number of signals delivered.

       [4mru_nvcsw[24m     the  number  of  times  a context switch resulted due to a
                    process voluntarily giving up  the  processor  before  its
                    time slice was completed (usually to await availability of
                    a resource).

       [4mru_nivcsw[24m    the  number  of  times  a context switch resulted due to a
                    higher priority process becoming runnable or  because  the
                    current process exceeded its time slice.

[1mNOTES[0m
       The  numbers  [4mru_inblock[24m and [4mru_oublock[24m account only for real I/O; data
       supplied by the caching mechanism is charged only to the first  process
       to read or write the data.

[1mERRORS[0m
       [1mGetrusage[22m() returns ‚Äê1 on error.  The possible errors are:

       [EINVAL]           The [4mwho[24m parameter is not a valid value.

       [EFAULT]           The address specified by the [4mrusage[24m parameter is not
                          in a valid part of the process address space.

[1mSEE ALSO[0m
       [4mgettimeofday[24m(2), [4mwait[24m(2)

[1mBUGS[0m
       There  is  no  way to obtain information about a child process that has
       not yet terminated.

[1mHISTORY[0m
       The [1mgetrusage [22mfunction call appeared in 4.2BSD.

4th Berkeley Distribution       March 10, 1991                    GETRUSAGE(2)
