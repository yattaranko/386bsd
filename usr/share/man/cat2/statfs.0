STATFS(2)                     System Calls Manual                    STATFS(2)

[1mNAME[0m
       statfs ‚Äî get file system statistics

[1mSYNOPSIS[0m
       [1m#include <sys/types.h>[0m
       [1m#include <sys/mount.h>[0m

       [4mint[0m
       [1mstatfs[22m([4mconst[24m [4mchar[24m [4m*path[24m, [4mstruct[24m [4mstatfs[24m [4m*buf[24m);

       [4mint[0m
       [1mfstatfs[22m([4mint[24m [4mfd[24m, [4mstruct[24m [4mstatfs[24m [4m*buf[24m);

[1mDESCRIPTION[0m
       [1mStatfs[22m()  returns information about a mounted file system.  [4mPath[24m is the
       path name of any file within the mounted filesystem.  [4mBuf[24m is a  pointer
       to a [1mstatfs[22m() structure defined as follows:

       typedef quad fsid_t;

       #define MNAMELEN 32     /* length of buffer for returned name */

       struct statfs {
       short   f_type;           /* type of filesystem (see below) */
       short   f_flags;          /* copy of mount flags */
       long    f_fsize;          /* fundamental file system block size */
       long    f_bsize;          /* optimal transfer block size */
       long    f_blocks;         /* total data blocks in file system */
       long    f_bfree;          /* free blocks in fs */
       long    f_bavail;         /* free blocks avail to non‚Äêsuperuser */
       long    f_files;          /* total file nodes in file system */
       long    f_ffree;          /* free file nodes in fs */
       fsid_t  f_fsid;           /* file system id */
       long    f_spare[6];       /* spare for later */
       char    f_mntonname[MNAMELEN];    /* mount point */
       char    f_mntfromname[MNAMELEN];  /* mounted filesystem */
       };
       /*
       * File system types.
       */
       #define MOUNT_UFS       1
       #define MOUNT_NFS       2
       #define MOUNT_MFS       3
       #define MOUNT_PC        4

       Fields  that  are undefined for a particular file system are set to ‚Äê1.
       [1mFstatfs[22m() returns the same information about an open file referenced by
       descriptor [4mfd[24m.

[1mRETURN VALUES[0m
       Upon successful completion, a value of 0 is returned.  Otherwise, ‚Äê1 is
       returned and the global variable [4merrno[24m is set to indicate the error.

[1mERRORS[0m
       [1mStatfs[22m() fails if one or more of the following are true:

       [ENOTDIR]      A component of the path prefix of [4mPath[24m is not  a  direc‚Äê
                      tory.

       [EINVAL]       [4mpath[24m contains a character with the high‚Äêorder bit set.

       [ENAMETOOLONG]
                      The  length  of  a component of [4mpath[24m exceeds 255 charac‚Äê
                      ters, or the length of [4mpath[24m exceeds 1023 characters.

       [ENOENT]       The file referred to by [4mpath[24m does not exist.

       [EACCES]       Search permission is denied for a component of the  path
                      prefix of [4mpath[24m.

       [ELOOP]        Too  many symbolic links were encountered in translating
                      [4mpath[24m.

       [EFAULT]       [4mBuf[24m or [4mpath[24m points to an invalid address.

       [EIO]          An I/O error occurred while reading from or  writing  to
                      the file system.

       [1mFstatfs[22m() fails if one or both of the following are true:

       [EBADF]        is not a valid open file descriptor.

       [EFAULT]       [4mBuf[24m points to an invalid address.

       [EIO]          An  I/O  error occurred while reading from or writing to
                      the file system.

[1mHISTORY[0m
       The [1mstatfs [22mfunction call is currently under development.

FreeBSD 13.2                     July 23, 1991                       STATFS(2)
