ACCESS(2)                     System Calls Manual                    ACCESS(2)

[1mNAME[0m
       access ‚Äî check access permissions of a file or pathname

[1mSYNOPSIS[0m
       [1m#include <unistd.h>[0m

       [4mint[0m
       [1maccess[22m([4mconst[24m [4mchar[24m [4m*path[24m, [4mint[24m [4mmode[24m);

[1mDESCRIPTION[0m
       The  [1maccess[22m()  function  checks  the accessibility of the file named by
       [4mpath[24m for the access permissions indicated by [4mmode[24m.  The value  of  [4mmode[0m
       is  the  bitwise  inclusive  OR of the access permissions to be checked
       (R_OK for read permission, W_OK for write permission and X_OK for  exe‚Äê
       cute/search permission) or the existence test, F_OK.  All components of
       the pathname [4mpath[24m are checked for access permissions (including F_OK).

       The real user ID is used in place of the effective user ID and the real
       group  access  list  (including the real group ID) are used in place of
       the effective ID for verifying permission.

       Even if a process has appropriate privileges and indicates success  for
       X_OK,  the  file  may  not  actually  have execute permission bits set.
       Likewise for R_OK and W_OK.

[1mRETURN VALUES[0m
       If [4mpath[24m cannot be found or if any of the desired access modes would not
       be granted, then a ‚Äê1 value is returned; otherwise a  0  value  is  re‚Äê
       turned.

[1mERRORS[0m
       Access to the file is denied if:

       [ENOTDIR]          A component of the path prefix is not a directory.

       [EINVAL]           The  pathname contains a character with the high‚Äêor‚Äê
                          der bit set.

       [ENAMETOOLONG]     A component of a pathname exceeded  255  characters,
                          or an entire path name exceeded 1023 characters.

       [ENOENT]           The named file does not exist.

       [EACCES]           Search  permission  is denied for a component of the
                          path prefix.

       [ELOOP]            Too many symbolic links were encountered  in  trans‚Äê
                          lating the pathname.

       [EROFS]            Write  access is requested for a file on a read‚Äêonly
                          file system.

       [ETXTBSY]          Write access  is  requested  for  a  pure  procedure
                          (shared text) file presently being executed.

       [EACCES]           Permission  bits  of the file mode do not permit the
                          requested access, or search permission is denied  on
                          a component of the path prefix.  The owner of a file
                          has permission checked with respect to the ‚Äò‚Äòowner‚Äô‚Äô
                          read,  write,  and execute mode bits, members of the
                          file‚Äôs group other than the  owner  have  permission
                          checked with respect to the ‚Äò‚Äògroup‚Äô‚Äô mode bits, and
                          all  others have permissions checked with respect to
                          the ‚Äò‚Äòother‚Äô‚Äô mode bits.

       [EFAULT]           [4mPath[24m points outside the process‚Äôs allocated  address
                          space.

       [EIO]              An  I/O error occurred while reading from or writing
                          to the file system.

[1mSEE ALSO[0m
       [4mchmod[24m(2), [4mstat[24m(2)

[1mSTANDARDS[0m
       [1mAccess[22m() conforms to IEEE Std 1003.1‚Äê1988 (‚ÄúPOSIX‚Äù).

[1mCAVEAT[0m
       [1mAccess[22m() is a potential security hole and should never be used.

4th Berkeley Distribution       March 10, 1991                       ACCESS(2)
