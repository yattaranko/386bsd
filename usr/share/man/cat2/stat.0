STAT(2)                       System Calls Manual                      STAT(2)

[1mNAME[0m
       stat, lstat, fstat ‚Äî get file status

[1mSYNOPSIS[0m
       [1m#include <sys/types.h>[0m
       [1m#include <sys/stat.h>[0m

       [4mint[0m
       [1mstat[22m([4mconst[24m [4mchar[24m [4m*path[24m, [4mstruct[24m [4mstat[24m [4m*buf[24m);

       [4mint[0m
       [1mlstat[22m([4mconst[24m [4mchar[24m [4m*path[24m, [4mstruct[24m [4mstat[24m [4m*buf[24m);

       [4mint[0m
       [1mfstat[22m([4mint[24m [4mfd[24m, [4mstruct[24m [4mstat[24m [4m*buf[24m);

[1mDESCRIPTION[0m
       The  [1mstat[22m()  function  obtains information about the file pointed to by
       [4mpath[24m.  Read, write or execute permission of the named file is  not  re‚Äê
       quired, but all directories listed in the path name leading to the file
       must be seachable.

       [1mLstat[22m()  is  like  [1mstat[22m()  except in the case where the named file is a
       symbolic link, in which case  [1mlstat[22m()  returns  information  about  the
       link,  while  [1mstat[22m() returns information about the file the link refer‚Äê
       ences.

       The [1mfstat[22m() obtains the same information about an open  file  known  by
       the file descriptor [4mfd[24m, such as would be obtained by an [4mopen[24m call.

       [4mBuf[24m  is  a  pointer  to  a  [1mstat[22m() structure as defined by ‚ü®[4msys/stat.h[24m‚ü©
       (shown below) and into which information is placed concerning the file.

       struct stat {
           dev_t    st_dev;    /* device inode resides on */
           ino_t    st_ino;    /* inode‚Äôs number */
           mode_t   st_mode;   /* inode protection mode */
           nlink_t  st_nlink;  /* number or hard links to the file */
           uid_t    st_uid;    /* user‚Äêid of owner */
           gid_t    st_gid;    /* group‚Äêid of owner */
           dev_t    st_rdev;   /* device type, for special file inode */
           off_t    st_size;   /* file size, in bytes */
           time_t   st_atime;  /* time of last access */
           long     st_spare1;
           time_t   st_mtime;  /* time of last data modification */
           long     st_spare2;
           time_t   st_ctime;  /* time of last file status change */
           long     st_spare3;
           long     st_blksize;/* optimal file sys I/O ops blocksize */
           long     st_blocks; /* blocks allocated for file */
           u_long   st_flags;  /* user defined flags for file */
           u_long   st_gen;    /* file generation number */
       };

       The time‚Äêrelated fields of [4mstruct[24m [4mstat[24m are as follows:

       st_atime   Time when file data last accessed.  Changed by the following
                  system calls: [4mmknod[24m(2), [4mutimes[24m(2), and [4mread[24m(2).

       st_mtime   Time when file data last modified.  Changed by the following
                  system calls: [4mmknod[24m(2), [4mutimes[24m(2), [4mwrite[24m(2).

       st_ctime   Time when file status was last changed (inode data modifica‚Äê
                  tion).  Changed by  the  following  system  calls:  [4mchmod[24m(2)
                  [4mchown[24m(2),    [4mlink[24m(2),    [4mmknod[24m(2),   [4mrename[24m(2),   [4munlink[24m(2),
                  [4mutimes[24m(2), [4mwrite[24m(2).

       st_blocks  The actual number  of  blocks  allocated  for  the  file  in
                  512‚Äêbyte units.

       The status information word [4mst_mode[24m has bits:

       #define S_IFMT 0170000           /* type of file */
       #define        S_IFIFO  0010000  /* named pipe (fifo) */
       #define        S_IFCHR  0020000  /* character special */
       #define        S_IFDIR  0040000  /* directory */
       #define        S_IFBLK  0060000  /* block special */
       #define        S_IFREG  0100000  /* regular */
       #define        S_IFLNK  0120000  /* symbolic link */
       #define        S_IFSOCK 0140000  /* socket */
       #define S_ISUID 0004000  /* set user id on execution */
       #define S_ISGID 0002000  /* set group id on execution */
       #define S_ISVTX 0001000  /* save swapped text even after use */
       #define S_IRUSR 0000400  /* read permission, owner */
       #define S_IWUSR 0000200  /* write permission, owner */
       #define S_IXUSR 0000100  /* execute/search permission, owner */

       For a list of access modes, see ‚ü®[4msys/stat.h[24m‚ü©, [4maccess[24m(2) and [4mchmod[24m(2).

[1mRETURN VALUES[0m
       Upon  successful  completion  a  value  of 0 is returned.  Otherwise, a
       value of ‚Äê1 is returned and [4merrno[24m is set to indicate the error.

[1mERRORS[0m
       [1mStat[22m() and [1mlstat[22m() will fail if:

       [ENOTDIR]       A component of the path prefix is not a directory.

       [EINVAL]        The pathname contains a character with  the  high‚Äêorder
                       bit set.

       [ENAMETOOLONG]  A  component  of a pathname exceeded 255 characters, or
                       an entire path name exceeded 1023 characters.

       [ENOENT]        The named file does not exist.

       [EACCES]        Search permission is denied for a component of the path
                       prefix.

       [ELOOP]         Too many symbolic links were encountered in translating
                       the pathname.

       [EFAULT]        [4mBuf[24m or [4mname[24m points to an invalid address.

       [EIO]           An I/O error occurred while reading from or writing  to
                       the file system.

       [1mFstat[22m() will fail if:

       [EBADF]   [4mfd[24m is not a valid open file descriptor.

       [EFAULT]  [4mBuf[24m points to an invalid address.

       [EIO]     An  I/O  error  occurred while reading from or writing to the
                 file system.

[1mCAVEAT[0m
       The fields in the stat structure currently marked [4mst_spare1[24m, [4mst_spare2[24m,
       and [4mst_spare3[24m are present in preparation for inode time stamps  expand‚Äê
       ing  to 64 bits.  This, however, can break certain programs that depend
       on the time stamps being contiguous (in calls to [4mutimes[24m(2)).

[1mSEE ALSO[0m
       [4mchmod[24m(2), [4mchown[24m(2), [4mutimes[24m(2)

[1mBUGS[0m
       Applying [4mfstat[24m to a socket (and  thus  to  a  pipe)  returns  a  zero‚Äôd
       buffer,  except  for the blocksize field, and a unique device and inode
       number.

[1mSTANDARDS[0m
       The [1mstat[22m() and [1mfstat[22m() function calls are expected to conform  to  IEEE
       Std 1003.1‚Äê1988 (‚ÄúPOSIX‚Äù).

[1mHISTORY[0m
       A [1mlstat [22mfunction call appeared in 4.2BSD.

4th Berkeley Distribution       March 10, 1991                         STAT(2)
