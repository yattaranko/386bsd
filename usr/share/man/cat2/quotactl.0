QUOTACTL(2)                   System Calls Manual                  QUOTACTL(2)

[1mNAME[0m
       quotactl ‚Äî manipulate filesystem quotas

[1mSYNOPSIS[0m
       [4m#include[24m [4m<ufs/quota.h>[24m  [4m/*[24m [4mfor[24m [4mufs[24m [4mquotas[24m [4m*/[24m [4mint[0m
       [1mquotactl[22m([4mconst[24m [4mchar[24m [4m*path[24m, [4mint[24m [4mcmd[24m, [4mint[24m [4mid[24m, [4mchar[24m [4m*addr[24m);

[1mDESCRIPTION[0m
       The  [1mquotactl[22m()  call enables, disables and manipulates filesystem quo‚Äê
       tas.  A quota control command given by [4mcmd[24m operates on the given  file‚Äê
       name  [4mpath[24m  for  the given user [4mid[24m.  The address of an optional command
       specific data structure, [4maddr[24m, may be given; its interpretation is dis‚Äê
       cussed below with each command.

       Currently quotas are supported only for the  ‚Äò‚Äòufs‚Äô‚Äô  filesystem.   For
       ‚Äò‚Äòufs‚Äô‚Äô,  a  command is composed of a primary command (see below) and a
       command type used to interpret the [4mid[24m.  Types are supported for  inter‚Äê
       pretation  of user identifiers and group identifiers.  The ‚Äò‚Äòufs‚Äô‚Äô spe‚Äê
       cific commands are:

       Q_QUOTAON  Enable disk quotas for the  filesystem  specified  by  [4mpath[24m.
                  The  command type specifies the type of the quotas being en‚Äê
                  abled.  The [4maddr[24m argument specifies a  file  from  which  to
                  take  the quotas.  The quota file must exist; it is normally
                  created with the [4mquotacheck[24m(8) program.  The [4mid[24m argument  is
                  unused.  Only the super‚Äêuser may turn quotas on.

       Q_QUOTAOFF
                  Disable  disk  quotas  for the filesystem specified by [4mpath[24m.
                  The command type specifies the type of the quotas being dis‚Äê
                  abled.  The [4maddr[24m and [4mid[24m arguments are unused.  Only the  su‚Äê
                  per‚Äêuser may turn quotas off.

       Q_GETQUOTA
                  Get  disk  quota  limits  and  current usage for the user or
                  group (as determined by the command  type)  with  identifier
                  [4mid[24m.   [4mAddr[24m is a pointer to a [4mstruct[24m [4mdqblk[24m structure (defined
                  in ‚ü®[4mufs/quota.h[24m‚ü©).

       Q_SETQUOTA
                  Set disk quota limits for the user or group  (as  determined
                  by  the command type) with identifier [4mid[24m.  [4mAddr[24m is a pointer
                  to a [4mstruct[24m [4mdqblk[24m structure (defined in ‚ü®[4mufs/quota.h[24m‚ü©).  The
                  usage fields of the [4mdqblk[24m structure are ignored.  This  call
                  is restricted to the super‚Äêuser.

       Q_SETUSE   Set  disk  usage limits for the user or group (as determined
                  by the command type) with identifier [4mid[24m.  [4mAddr[24m is a  pointer
                  to  a  [4mstruct[24m  [4mdqblk[24m  structure  (defined in ‚ü®[4mufs/quota.h[24m‚ü©).
                  Only the usage fields are used.  This call is restricted  to
                  the super‚Äêuser.

       Q_SYNC     Update  the  on‚Äêdisk copy of quota usages.  The command type
                  specifies which type of quotas are to be  updated.   The  [4mid[0m
                  and [4maddr[24m parameters are ignored.

[1mRETURN VALUES[0m
       A successful call returns 0, otherwise the value ‚Äê1 is returned and the
       global variable [4merrno[24m indicates the reason for the failure.

[1mERRORS[0m
       A [1mquotactl[22m() call will fail if:

       [EOPNOTSUPP]    The kernel has not been compiled with the QUOTA option.

       [EUSERS]        The quota table cannot be expanded.

       [EINVAL]        [4mCmd[24m or the command type is invalid.

       [EINVAL]        A pathname contains a character with the high‚Äêorder bit
                       set.

       [EACCES]        In Q_QUOTAON, the quota file is not a plain file.

       [EACCES]        Search  permission  is denied for a component of a path
                       prefix.

       [ENOTDIR]       A component of a path prefix was not a directory.

       [ENAMETOOLONG]  A component of either pathname exceeded 255 characters,
                       or the entire length of either path name exceeded  1023
                       characters.

       [ENOENT]        A filename does not exist.

       [ELOOP]         Too many symbolic links were encountered in translating
                       a pathname.

       [EROFS]         In  Q_QUOTAON,  the  quota  file resides on a read‚Äêonly
                       filesystem.

       [EIO]           An I/O error occurred while reading from or writing  to
                       a file containing quotas.

       [EFAULT]        An  invalid [4maddr[24m was supplied; the associated structure
                       could not be copied in or out of the kernel.

       [EFAULT]        [4mPath[24m points outside  the  process‚Äôs  allocated  address
                       space.

       [EPERM]         The  call was privileged and the caller was not the su‚Äê
                       per‚Äêuser.

[1mSEE ALSO[0m
       [4mquota[24m(1), [4mfstab[24m(5), [4medquota[24m(8), [4mquotacheck[24m(8), [4mquotaon[24m(8), [4mrepquota[24m(8)

[1mBUGS[0m
       There should be some way to integrate this call with the resource limit
       interface provided by [4msetrlimit[24m(2) and [4mgetrlimit[24m(2).

[1mHISTORY[0m
       The [1mquotactl [22mfunction call appeared in 4.3BSD-Reno.

FreeBSD 13.2                     July 23, 1991                     QUOTACTL(2)
