SIGSUSPEND(2)                 System Calls Manual                SIGSUSPEND(2)

[1mNAME[0m
       sigsuspend ‚Äî atomically release blocked signals and wait for interrupt

[1mSYNOPSIS[0m
       [1m#include <sys/signal.h>[0m

       [4mint[0m
       [1msigsuspend[22m([4mconst[24m [4msigset_t[24m [4m*sigmask[24m);

[1mDESCRIPTION[0m
       [1mSigsuspend[22m()  temporarily changes the blocked signal mask to the set to
       which [4msigmask[24m points, and then waits for a signal to arrive; on  return
       the previous set of masked signals is restored.  The signal mask set is
       usually  empty to indicate that all signals are to be unblocked for the
       duration of the call.

       In normal usage, a signal is blocked using [4msigprocmask[24m(2)  to  begin  a
       critical  section,  variables  modified on the occurrence of the signal
       are examined to determine that there is no work to  be  done,  and  the
       process  pauses  awaiting  work by using [1msigsuspend[22m() with the previous
       mask returned by [4msigprocmask[24m.

[1mRETURN VALUES[0m
       The [1msigsuspend[22m() function always terminates by being  interrupted,  re‚Äê
       turning ‚Äê1 with [4merrno[24m set to EINTR.

[1mSEE ALSO[0m
       [4msigprocmask[24m(2), [4msigaction[24m(2), [4msigsetops[24m(3)

[1mSTANDARDS[0m
       The   [1msigsupend   [22mfunction   call  conforms  to  IEEE  Std  1003.1‚Äê1988
       (‚ÄúPOSIX.1‚Äù).

FreeBSD 13.2                     July 23, 1991                   SIGSUSPEND(2)
