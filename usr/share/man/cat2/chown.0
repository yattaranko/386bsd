CHOWN(2)                      System Calls Manual                     CHOWN(2)

[1mNAME[0m
       chown, fchown ‚Äî change owner and group of a file

[1mSYNOPSIS[0m
       [1m#include <unistd.h>[0m

       [4mint[0m
       [1mchown[22m([4mconst[24m [4mchar[24m [4m*path[24m, [4muid_t[24m [4mowner[24m, [4mgid_t[24m [4mgroup[24m);

       [4mint[0m
       [1mfchown[22m([4mint[24m [4mfd[24m, [4mint[24m [4mowner[24m, [4mint[24m [4mgroup[24m);

[1mDESCRIPTION[0m
       The owner ID and group ID of the file named by [4mpath[24m or referenced by [4mfd[0m
       is changed as specified by the arguments [4mowner[24m and [4mgroup[24m.  The owner of
       a  file may change the [4mgroup[24m to a group of which he or she is a member,
       but the change [4mowner[24m capability is restricted to the super‚Äêuser.

       [1mChown[22m() clears the set‚Äêuser‚Äêid and set‚Äêgroup‚Äêid bits  on  the  file  to
       prevent  accidental  or  mischievious  creation of set‚Äêuser‚Äêid and set‚Äê
       group‚Äêid programs.

       [1mFchown[22m() is particularly useful when used in conjunction with the  file
       locking primitives (see [4mflock[24m(2)).

       One  of  the owner or group id‚Äôs may be left unchanged by specifying it
       as ‚Äê1.

       If the final component of [4mpath[24m is a symbolic link,  the  ownership  and
       group  of  the symbolic link is changed, not the ownership and group of
       the file or directory to which it points.

[1mRETURN VALUES[0m
       Zero is returned if the operation was successful; ‚Äê1 is returned if  an
       error  occurs,  with  a  more  specific  error code being placed in the
       global variable [4merrno[24m.

[1mERRORS[0m
       [1mChown[22m() will fail and the file will be unchanged if:

       [ENOTDIR]          A component of the path prefix is not a directory.

       [EINVAL]           The pathname contains a character with the  high‚Äêor‚Äê
                          der bit set.

       [ENAMETOOLONG]     A  component  of a pathname exceeded 255 characters,
                          or an entire path name exceeded 1023 characters.

       [ENOENT]           The named file does not exist.

       [EACCES]           Search permission is denied for a component  of  the
                          path prefix.

       [ELOOP]            Too  many  symbolic links were encountered in trans‚Äê
                          lating the pathname.

       [EPERM]            The effective user ID is not the super‚Äêuser.

       [EROFS]            The named file resides on a read‚Äêonly file system.

       [EFAULT]           [4mPath[24m points outside the process‚Äôs allocated  address
                          space.

       [EIO]              An  I/O error occurred while reading from or writing
                          to the file system.

       [1mFchown[22m() will fail if:

       [EBADF]            does not refer to a valid descriptor.

       [EINVAL]           refers to a socket, not a file.

       [EPERM]            The effective user ID is not the super‚Äêuser.

       [EROFS]            The named file resides on a read‚Äêonly file system.

       [EIO]              An I/O error occurred while reading from or  writing
                          to the file system.

[1mSEE ALSO[0m
       [4mchown[24m(8), [4mchgrp[24m(1), [4mchmod[24m(2), [4mflock[24m(2)

[1mSTANDARDS[0m
       [1mChown[22m() is expected to conform to IEEE Std 1003.1‚Äê1988 (‚ÄúPOSIX‚Äù).

[1mHISTORY[0m
       The [1mfchown[22m() function call appeared in 4.2BSD.

4th Berkeley Distribution       March 10, 1991                        CHOWN(2)
