ACCEPT(2)                     System Calls Manual                    ACCEPT(2)

[1mNAME[0m
       accept ‚Äî accept a connection on a socket

[1mSYNOPSIS[0m
       [1m#include <sys/types.h>[0m
       [1m#include <sys/socket.h>[0m

       [4mint[0m
       [1maccept[22m([4mint[24m [4ms[24m, [4mstruct[24m [4msockaddr[24m [4m*addr[24m, [4mint[24m [4m*addrlen[24m);

[1mDESCRIPTION[0m
       The  argument [4ms[24m is a socket that has been created with [4msocket[24m(2), bound
       to an address with [4mbind[24m(2), and is listening for  connections  after  a
       [4mlisten[24m(2).  The [1maccept[22m() argument extracts the first connection request
       on the queue of pending connections, creates a new socket with the same
       properties of [4ms[24m and allocates a new file descriptor for the socket.  If
       no  pending connections are present on the queue, and the socket is not
       marked as non‚Äêblocking, [1maccept[22m() blocks the caller until  a  connection
       is  present.   If the socket is marked non‚Äêblocking and no pending con‚Äê
       nections are present on the queue, [1maccept[22m() returns  an  error  as  de‚Äê
       scribed below.  The accepted socket may not be used to accept more con‚Äê
       nections.  The original socket [4ms[24m remains open.

       The  argument [4maddr[24m is a result parameter that is filled in with the ad‚Äê
       dress of the connecting entity, as known to the  communications  layer.
       The  exact  format of the [4maddr[24m parameter is determined by the domain in
       which the communication is occurring.  The [4maddrlen[24m  is  a  value‚Äêresult
       parameter;  it  should initially contain the amount of space pointed to
       by [4maddr[24m; on return it will contain the actual length (in bytes) of  the
       address  returned.   This  call  is  used  with connection‚Äêbased socket
       types, currently with SOCK_STREAM.

       It is possible to [4mselect[24m(2) a socket  for  the  purposes  of  doing  an
       [1maccept[22m() by selecting it for read.

       For  certain  protocols which require an explicit confirmation, such as
       ISO or DATAKIT, [1maccept[22m() can be thought of  as  merely  dequeueing  the
       next  connection  request  and not implying confirmation.  Confirmation
       can be implied by a normal read or write on the new file desciptor, and
       rejection can be implied by closing the new socket.

       One can obtain user connection request data without confirming the con‚Äê
       nection by issuing a [4mrecvmsg[24m(2) call with an [4mmsg_iovlen[24m of 0 and a non‚Äê
       zero [4mmsg_controllen[24m, or by issuing a [4mgetsockopt[24m(2) request.  Similarly,
       one can provide user connection  rejection  information  by  issuing  a
       [4msendmsg[24m(2)  call  with  providing  only  the control information, or by
       calling [4msetsockopt[24m(2).

[1mRETURN VALUES[0m
       The call returns -1 on error.  If it succeeds, it returns  a  non‚Äênega‚Äê
       tive integer that is a descriptor for the accepted socket.

[1mERRORS[0m
       The [1maccept[22m() will fail if:

       [EBADF]      The descriptor is invalid.

       [ENOTSOCK]   The descriptor references a file, not a socket.

       [EOPNOTSUPP]
                    The referenced socket is not of type SOCK_STREAM.

       [EFAULT]     The  [4maddr[24m  parameter is not in a writable part of the user
                    address space.

       [EWOULDBLOCK]
                    The socket is marked non‚Äêblocking and no  connections  are
                    present to be accepted.

[1mSEE ALSO[0m
       [4mbind[24m(2), [4mconnect[24m(2), [4mlisten[24m(2), [4mselect[24m(2), [4msocket[24m(2)

[1mHISTORY[0m
       The [1maccept [22mfunction appeared in 4.2BSD.

4.2 Berkeley Distribution       April 29, 1991                       ACCEPT(2)
