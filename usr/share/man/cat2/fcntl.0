FCNTL(2)                      System Calls Manual                     FCNTL(2)

[1mNAME[0m
       fcntl ‚Äî file control

[1mSYNOPSIS[0m
       [1m#include <sys/fcntl.h>[0m

       [4mint[0m
       [1mfcntl[22m([4mint[24m [4mfd[24m, [4mint[24m [4mcmd[24m, [4mint[24m [4marg[24m);

[1mDESCRIPTION[0m
       [1mFcntl[22m()  provides  for  control over descriptors.  The argument [4mfd[24m is a
       descriptor to be operated on by [4mcmd[24m as follows:

       F_DUPFD    Return a new descriptor as follows:

                      [1m‚Ä¢   [22mLowest numbered available descriptor greater than or
                          equal to [4marg[24m.
                      [1m‚Ä¢   [22mSame object references as the original descriptor.
                      [1m‚Ä¢   [22mNew descriptor shares the same file  offset  if  the
                          object was a file.
                      [1m‚Ä¢   [22mSame access mode (read, write or read/write).
                      [1m‚Ä¢   [22mSame  file status flags (i.e., both file descriptors
                          share the same file status flags).
                      [1m‚Ä¢   [22mThe close‚Äêon‚Äêexec flag associated with the new  file
                          descriptor  is  set  to  remain open across [4mexecv[24m(2)
                          system calls.

       F_GETFD    Get the close‚Äêon‚Äêexec flag associated with the file descrip‚Äê
                  tor [4mfd[24m.  If the low‚Äêorder bit of the returned  value  is  0,
                  the  file will remain open across [1mexec[22m(), otherwise the file
                  will be closed upon execution of [1mexec[22m() ([4marg[24m is ignored).

       F_SETFD    Set the close‚Äêon‚Äêexec flag associated with [4mfd[24m to the low or‚Äê
                  der bit of [4marg[24m (0 or 1 as above).

       F_GETFL    Get descriptor status flags, as described below ([4marg[24m is  ig‚Äê
                  nored).

       F_SETFL    Set descriptor status flags to [4marg[24m.

       F_GETOWN   Get  the  process  ID  or  process group currently receiving
                  SIGIO and SIGURG signals; process  groups  are  returned  as
                  negative values ([4marg[24m is ignored).

       F_SETOWN   Set the process or process group to receive SIGIO and SIGURG
                  signals;  process  groups  are specified by supplying [4marg[24m as
                  negative, otherwise [4marg[24m is interpreted as a process ID.

       The flags for the F_GETFL and F_SETFL flags are as follows:

       O_NDELAY   Non‚Äêblocking I/O; if no data is available to a [4mread[24m call, or
                  if a [4mwrite[24m operation would block, the read or write call re‚Äê
                  turns ‚Äê1 with the error EWOULDBLOCK.

       O_APPEND   Force each write to append at the end of  file;  corresponds
                  to the O_APPEND flag of [4mopen[24m(2).

       O_ASYNC    Enable the SIGIO signal to be sent to the process group when
                  I/O is possible, e.g., upon availability of data to be read.

[1mRETURN VALUES[0m
       Upon  successful  completion, the value returned depends on [4mcmd[24m as fol‚Äê
       lows:

             F_DUPFD    A new file descriptor.

             F_GETFD    Value of flag (only the low‚Äêorder bit is defined).

             F_GETFL    Value of flags.

             F_GETOWN   Value of file descriptor owner.

             other      Value other than ‚Äê1.

       Otherwise, a value of ‚Äê1 is returned and [4merrno[24m is set to  indicate  the
       error.

[1mERRORS[0m
       [1mFcntl[22m() will fail if:

       [EBADF]            [4mFildes[24m is not a valid open file descriptor.

       [EMFILE]           [4mCmd[24m  is  F_DUPFD  and  the maximum allowed number of
                          file descriptors are currently open.

       [EINVAL]           [4mCmd[24m is F_DUPFD and [4marg[24m is negative or  greater  than
                          the maximum allowable number (see [4mgetdtablesize[24m(2)).

       [ESRCH]            [4mCmd[24m is F_SETOWN and the process ID given as argument
                          is not in use.

[1mSEE ALSO[0m
       [4mclose[24m(2), [4mexecve[24m(2), [4mgetdtablesize[24m(2), [4mopen[24m(2), [4msigvec[24m(2)

[1mBUGS[0m
       The  asynchronous  I/O  facilities  of FNDELAY and FASYNC are currently
       available only for tty and socket operations.

[1mHISTORY[0m
       The [1mfcntl [22mfunction call appeared in 4.2BSD.

4.2 Berkeley Distribution       March 10, 1991                        FCNTL(2)
